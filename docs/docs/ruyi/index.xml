<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wiseinf â€“ Ruyi: Cloud native cluster autoscaling engine</title>
    <link>/docs/ruyi/</link>
    <description>Recent content in Ruyi: Cloud native cluster autoscaling engine on Wiseinf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="/docs/ruyi/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Installation and Deployment</title>
      <link>/docs/ruyi/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/ruyi/setup/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Ruyi: Cloud Native Scaling Engine.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;TBD&amp;hellip;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Automatic Scaling</title>
      <link>/docs/ruyi/autoscaling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/ruyi/autoscaling/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Ruyi: The cloud-native cluster scaling engine.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;scaling-principles&#34;&gt;Scaling Principles&lt;/h2&gt;
&lt;p&gt;Updating, please stand by.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Configuration</title>
      <link>/docs/ruyi/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/ruyi/configuration/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Ruyi: Cloud-native cluster scaling and expansion engine.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;configuring-ruyi-cloud-native-cluster-scaling-and-expansion-engine&#34;&gt;Configuring Ruyi: Cloud-native Cluster Scaling and Expansion Engine&lt;/h2&gt;
&lt;p&gt;Ruyi: Cloud-native cluster scaling and expansion engine provides two main features: automatic scaling and virtual capacity. You can use either feature individually or use both features at the same time.&lt;/p&gt;
&lt;p&gt;You can specify the features using the command line parameter &lt;code&gt;--features&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following describes the main configuration parameters for configuring the automatic scaling feature or the virtual capacity feature separately.&lt;/p&gt;
&lt;h3 id=&#34;configuring-the-automatic-scaling-feature&#34;&gt;Configuring the Automatic Scaling Feature&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ruyi --features=Autoscaling --cloud-provider=alicloud --loglevel=debug --kubeconfig=/opt/ruyi/config/kubeconfig --config=/opt/ruyi/config/config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;configuring-the-virtual-capacity-feature&#34;&gt;Configuring the Virtual Capacity Feature&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ruyi --features=VirtualCapacity --cloud-provider=alicloud --loglevel=debug --kubeconfig=/opt/ruyi/config/kubeconfig --config=/opt/ruyi/config/config.yaml --webhook-cert-dir=/opt/ruyi/certs/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The virtual capacity feature involves a virtual capacity controller and a webhook. You can control them separately using parameters.&lt;/p&gt;
&lt;p&gt;For example, you can enable the virtual capacity controller alone by running the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ruyi --features=VirtualCapacity --cloud-provider=alicloud --loglevel=debug --kubeconfig=/opt/ruyi/config/kubeconfig --config=/opt/ruyi/config/config.yaml --enable-virtual-capacity-controller=true  --enable-webhook=false
      
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or, you can start the webhook alone by running the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ruyi --features=VirtualCapacity --cloud-provider=alicloud --loglevel=debug --kubeconfig=/opt/ruyi/config/kubeconfig --config=/opt/ruyi/config/config.yaml
--enable-virtual-capacity-controller=false  --enable-webhook=true --webhook-cert-dir=/opt/ruyi/certs/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When configuring the webhook, you must specify the &lt;code&gt;MutatingWebhookConfiguration&lt;/code&gt;, as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;admissionregistration.k8s.io/v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;MutatingWebhookConfiguration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;wiseinf-webhooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;webhooks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ruyi.wiseinf-system.svc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;admissionReviewVersions&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;clientConfig&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;caBundle&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CA Bundle&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;service&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ruyi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;wiseinf-system&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/mutate--v1-node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;rules&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;apiGroups&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;apiVersions&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;operations&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UPDATE&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#ae81ff&#34;&gt;nodes/status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;scope&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cluster&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;failurePolicy&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Ignore&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;sideEffects&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Note: You must correctly specify the &lt;code&gt;caBundle&lt;/code&gt; in the &lt;code&gt;MutatingWebhookConfiguration&lt;/code&gt; to make the webhook work properly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;environment-variables&#34;&gt;Environment Variables&lt;/h3&gt;
&lt;p&gt;When using the automatic scaling feature, you need to provide cloud service provider-related information through environment variables.&lt;/p&gt;
&lt;p&gt;If you are using Alibaba Cloud, you need to configure the AccessKey and its region through environment variables.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Environment Variable Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ALIBABA_CLOUD_ACCESS_KEY_ID&lt;/td&gt;
&lt;td&gt;Alibaba Cloud AccessKeyID&lt;/td&gt;
&lt;td&gt;No default value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ALIBABA_CLOUD_ACCESS_KEY_SECRET&lt;/td&gt;
&lt;td&gt;Alibaba Cloud AccessKeySecret&lt;/td&gt;
&lt;td&gt;No default value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ALIBABA_CLOUD_REGION_ID&lt;/td&gt;
&lt;td&gt;The ID of the region where the Alibaba Cloud cluster is located&lt;/td&gt;
&lt;td&gt;cn-hangzhou&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you are using AWS, you need to configure the AccessKey through environment variables.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Environment Variable Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY&lt;/td&gt;
&lt;td&gt;AWS AccessKeyID&lt;/td&gt;
&lt;td&gt;No default value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY&lt;/td&gt;
&lt;td&gt;AWS AccessKeySecret&lt;/td&gt;
&lt;td&gt;No default value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS_ASSUME_ROLE_ARN&lt;/td&gt;
&lt;td&gt;AWS ASSUME_ROLE_ARN&lt;/td&gt;
&lt;td&gt;No default value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For more detailed configuration items, please refer to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/docs/ruyi/configuration/command-line&#34;&gt;Command Line Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/ruyi/configuration/nodegroup&#34;&gt;Node Group Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Monitoring</title>
      <link>/docs/ruyi/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/ruyi/monitoring/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Monitoring of Ruyi: Cloud-Native Cluster Scaling Engine.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h2&gt;
&lt;p&gt;The cloud-native scaling engine provides a series of monitoring metrics, supporting monitoring through Prometheus/Thanos.&lt;/p&gt;
&lt;h3 id=&#34;auto-scaling-metrics&#34;&gt;Auto-Scaling Metrics&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metric Name&lt;/th&gt;
&lt;th&gt;Tags&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_autoscaling_run_count&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;Number of auto-scaling runs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_nodes&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;br/&gt;type: Node type&lt;/td&gt;
&lt;td&gt;Number of nodes of each type in the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_pods&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;/td&gt;
&lt;td&gt;Number of Pods of each type in the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_request&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;br/&gt;resource: Resource type&lt;/td&gt;
&lt;td&gt;Request volume of the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_capacity&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;br/&gt;resource: Resource type&lt;/td&gt;
&lt;td&gt;Capacity of the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_percent&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;br/&gt;resource: Resource type&lt;/td&gt;
&lt;td&gt;Percentage of request volume of the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_scale_delta&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;/td&gt;
&lt;td&gt;Node adjustment amount of the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_nodegroup_size&lt;/td&gt;
&lt;td&gt;nodegroup: Node group name&lt;br/&gt;id: Node group ID&lt;br/&gt;cloud_provider: Cloud provider&lt;br/&gt;type: Type&lt;/td&gt;
&lt;td&gt;Size of the node group&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;virtual-capacity-metrics&#34;&gt;Virtual Capacity Metrics&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metric Name&lt;/th&gt;
&lt;th&gt;Tags&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_virtual_capacity_run_count&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Number of virtual capacity runs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_node_request_sum&lt;/td&gt;
&lt;td&gt;node: Node name&lt;br/&gt;id: Node group ID&lt;br/&gt;nodegroup: Node group name&lt;br/&gt;resource: Resource type&lt;/td&gt;
&lt;td&gt;Node request volume&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_node_allocatable&lt;/td&gt;
&lt;td&gt;node: Node name&lt;br/&gt;id: Node group ID&lt;br/&gt;nodegroup: Node group name&lt;br/&gt;resource: Resource type&lt;/td&gt;
&lt;td&gt;Allocatable of node virtual capacity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ruyi_virtual_capacity_ratio&lt;/td&gt;
&lt;td&gt;node: Node name&lt;br/&gt;id: Node group ID&lt;br/&gt;nodegroup: Node group name&lt;br/&gt;type: Type&lt;/td&gt;
&lt;td&gt;Virtual capacity ratio&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Additionally, users can also view the actual changes in virtual capacity through the Kubernetes metric &lt;code&gt;kube_node_status_allocatable&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FAQ</title>
      <link>/docs/ruyi/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/ruyi/troubleshooting/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Common questions and troubleshooting processes for using Ruyi: the cloud-native cluster scaling engine.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Updating, please wait.&lt;/p&gt;
&lt;!-- ## Issue 1:

## Issue 2:

## Issue 3: --&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>/docs/ruyi/virtualcapacity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/ruyi/virtualcapacity/</guid>
      <description>
        
        
        &lt;p&gt;Virtual capacity is a technology that increases the node capacity by three times (or even more) of its original capacity under certain conditions, thereby supporting the scheduling of more Pods (applications) on the node. With virtual capacity, users can significantly save on their IT costs.&lt;/p&gt;
&lt;p&gt;To understand virtual capacity, you must first understand the scheduling mechanism of Kubernetes. In Kubernetes, scheduling is the process of assigning an application&amp;rsquo;s Pods to the nodes on which they will run. When a Pod is scheduled, its resource requirements are usually specified. For CPU resources, its Request and Limit attributes (referred to as CPU Request and CPU Limit respectively) are specified. For nodes in Kubernetes, they generally have capacity attributes and allocable capacity upper limit attributes. The capacity attributes include: 1. Capacity: the upper limit of the nodeâ€™s capacity; 2. Allocatable: the upper limit of the nodeâ€™s allocable capacity, which will be removed based on the upper limit of the node capacity. It is obtained from some resources used by the system and some reserved resources. When Kubernetes schedules, in terms of capacity, it mainly considers whether the Pod&amp;rsquo;s CPU Request and the node&amp;rsquo;s Allocatable match. The meaning of matching means: the remaining capacity of the current node Allocatable should be greater than or equal to the CPU Request of the current Pod.&lt;/p&gt;
&lt;p&gt;When the remaining capacity of the node Allocatable is less than the current Pod&amp;rsquo;s CPU Request, the Pod cannot be scheduled to this node. At this time, scheduling will consider other nodes. When all nodes do not meet the requirements, the Pod will be suspended directly and wait for suitable resources to be scheduled again. When a Pod is suspended, some Kubernetes providers provide a cluster expansion and contraction mechanism. When users enable this mechanism, new nodes will be expanded in the cluster and the Pod will be scheduled to the new node.&lt;/p&gt;
&lt;p&gt;In fact, when the remaining capacity of the node Allocatable is less than the current Pod&amp;rsquo;s CPU Request, the usage on the current node may be low, and the actual remaining resources on the node are greater than the current Pod&amp;rsquo;s CPU Request. Theoretically, the Pod can be scheduled to this node. Virtual capacity provides a mechanism to expand the Allocatable value of a node under certain conditions, allowing the scheduler to consider that the remaining capacity of the Allocatable of the current node is still greater than or equal to the CPU Request of the current Pod, thereby scheduling the Pod to the node.&lt;/p&gt;
&lt;p&gt;By expanding the virtual capacity of nodes, IT costs can be significantly saved, especially in situations such as development and testing where resource utilization is low.&lt;/p&gt;
&lt;p&gt;It should be noted that scheduling too many Pods on a node may have a certain impact on the stability of the node and application. Therefore, it is necessary to set appropriate values according to actual conditions and use some balanced scheduling algorithms.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
